CREATE OR REPLACE PACKAGE AccountOperations IS
  PROCEDURE OpenAccount(p_accountid NUMBER, p_customerid NUMBER, p_type VARCHAR2, p_balance NUMBER);
  PROCEDURE CloseAccount(p_accountid NUMBER);
  FUNCTION GetTotalBalance(p_customerid NUMBER) RETURN NUMBER;
END AccountOperations;


-- Package body
CREATE OR REPLACE PACKAGE BODY AccountOperations IS

  PROCEDURE OpenAccount(p_accountid NUMBER, p_customerid NUMBER, p_type VARCHAR2, p_balance NUMBER) IS
  BEGIN
    INSERT INTO Accounts VALUES (p_accountid, p_customerid, p_type, p_balance, SYSDATE);
  EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
      DBMS_OUTPUT.PUT_LINE('Account already exists.');
  END;

  PROCEDURE CloseAccount(p_accountid NUMBER) IS
  BEGIN
    DELETE FROM Accounts WHERE AccountID = p_accountid;
  END;

  FUNCTION GetTotalBalance(p_customerid NUMBER) RETURN NUMBER IS
    v_total NUMBER;
  BEGIN
    SELECT SUM(Balance) INTO v_total FROM Accounts WHERE CustomerID = p_customerid;
    RETURN NVL(v_total, 0);
  END;

END AccountOperations;


-- Test the package
BEGIN
  AccountOperations.OpenAccount(3, 3, 'Savings', 4000);
  AccountOperations.OpenAccount(4, 3, 'Checking', 2000);
  DBMS_OUTPUT.PUT_LINE('Total Balance for Customer 3: ' || AccountOperations.GetTotalBalance(3));
  AccountOperations.CloseAccount(4);
END;
/